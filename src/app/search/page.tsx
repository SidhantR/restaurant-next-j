import { Metadata } from "next";
import Header from "./components/Header";
import RestaurantCard from "./components/Restaurant";
import SideBar from "./components/SideBar";
import { PRICE, PrismaClient } from "@prisma/client";

export const metadata: Metadata = {
  title: '| search',
  description: 'Generated by create next app',
  keywords: ["search", "restaurant"]
}

const prisma = new PrismaClient()

interface searchParams {
  city?: string, 
  region?: string, 
  price?: PRICE
}

const fetchRegion = async () => {
  return await prisma.region.findMany()
}

const fetchLocations = async () => {
  return await prisma.location.findMany()
}

const fetchRestaurants = async (searchParams : searchParams) => {
  
  const select = {
    id: true,
    name: true,
    main_image: true,
    price: true,
    region: true,
    location: true,
    slug: true,
  }
  if (!searchParams.city && !searchParams.price && !searchParams.region) return await prisma.restaurant.findMany({ select })

  const where : any = {}

  if(searchParams.city){
    const location = {
      name : {
        equals: searchParams.city.toLowerCase()
      }
    }
    where.location = location
  }

  if(searchParams.region){
    const region = {
      name : {
        equals : searchParams.region.toLowerCase()
      }
    }
    where.region = region
  }

  if(searchParams.price){
    const price = {
      equals: searchParams.price
    }
    where.price = price 
  }
  return await prisma.restaurant.findMany({
    where,
    select
  })
}

export default async function SearchPage({ searchParams }: {
  searchParams: searchParams
}) {

  const restaurants = await fetchRestaurants(searchParams)
  const locations = await fetchLocations()
  const regions = await fetchRegion()

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SideBar locations={locations} regions={regions} searchParams={searchParams} />
        <div className="w-5/6">
          {restaurants.length ? (
            restaurants.map((restaurant) => (
              <RestaurantCard restaurant={restaurant} />
            ))
          ) : (
            <p>Sorry no Restaurant Found</p>
          )}
        </div>
      </div>
    </>
  )
}